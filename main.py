import os
import logging
import feedparser
from ai21 import AI21Client
from ai21.models.chat import ChatMessage
import telegram
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes


"""
# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")
AI21_API_KEY = os.getenv("AI21_API_KEY")
WEBHOOK_URL = "https://sport-globus-bot.onrender.com/webhook"   #os.getenv("WEBHOOK_URL")
"""

TELEGRAM_TOKEN = "8495882876:AAH1xwbeyOqPRkquvz7aijF5iHa6US3IgNg"
TELEGRAM_CHANNEL_ID = "@sport_globus"
AI21_API_KEY = "f46255e8-8dfb-4bdb-abf0-cc8eb4450cd0"
WEBHOOK_URL = "https://sport-globus-bot.onrender.com/webhook"



logging.basicConfig(level=logging.INFO)

# --- AI21 ---
ai21_client = AI21Client(api_key=AI21_API_KEY)

import requests
from datetime import datetime, timedelta

API_KEY = "bd6718b87c854edc8baf0880ac7e6992"


def get_latest_news():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–∞–º—É—é –ø–æ–ø—É–ª—è—Ä–Ω—É—é —Ñ—É—Ç–±–æ–ª—å–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ —Å NewsAPI.org.
    """
    now = datetime.utcnow()
    yesterday = now - timedelta(days=2)
    from_date = yesterday.strftime("%Y-%m-%dT%H:%M:%S")
    to_date = now.strftime("%Y-%m-%dT%H:%M:%S")

    url = "https://newsapi.org/v2/everything"
    params = {
        "q": "football OR soccer",
        "from": from_date,
        "to": to_date,
        "language": "en",
        "sortBy": "popularity",
        "pageSize": 10,
        "apiKey": API_KEY
    }

    response = requests.get(url, params=params)
    if response.status_code != 200:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", response.status_code)
        return None

    articles = response.json().get("articles", [])
    if not articles:
        print("–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞.")
        return None

    top_article = articles[0]
    return {
        "title": top_article["title"],
        "link": top_article["url"],
        "summary": top_article.get("description", ""),
        "published": top_article["publishedAt"],
        "source": top_article["source"]["name"],
        "image": top_article.get("urlToImage")  # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
    }






# --- AI21 —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è ---
def summarize_text(text: str) -> str:
    try:
        response = ai21_client.chat.completions.create(
            model="jamba-large-1.7",
            messages=[ChatMessage(role="user", content=f"–°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏:\n\n{text}")]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"AI21 –æ—à–∏–±–∫–∞: {e}")
        return None

# --- –ü–æ—Å—Ç–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–∏ ---
async def post_news(app: Application):
    news = get_latest_news()
    if not news:
        return
    summary = summarize_text(news["summary"] or news["title"])
    if not summary:
        summary = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é."
    message = f"üì∞ {news['title']}\n\n{summary}\n\nüîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {news['link']}"
    try:
        await app.bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=message)
        logging.info("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")

# --- –ö–æ–º–∞–Ω–¥–∞ /post_now ---
async def post_now(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await post_news(context.application)
    await update.message.reply_text("üì∞ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é!")

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
def main():
    try:
        app = Application.builder().token(TELEGRAM_TOKEN).build()
        app.add_handler(CommandHandler("post_now", post_now))

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫–∞
        port = int(os.environ.get("PORT", 5000))
        app.run_webhook(
            listen="0.0.0.0",
            port=port,
            url_path="/webhook",
            webhook_url=WEBHOOK_URL  # ‚Üê run_webhook —Å–∞–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤–µ–±—Ö—É–∫!
        )

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è Telegram API
        #app.bot.set_webhook(f"{WEBHOOK_URL}")
        logging.info("‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    main()
    news = get_latest_news()
    if news:
        print("üì∞", news["title"])
        print("üîó", news["link"])
        print("üìù", news["summary"])
        print("üñº", news["image"])